{
  "entities": {
    "Agent": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Agent",
      "type": "object",
      "description": "Represents an agent who can be assigned to missions.",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "The agent's first name."
        },
        "lastName": {
          "type": "string",
          "description": "The agent's last name."
        },
        "registrationNumber": {
            "type": "string",
            "description": "The agent's service number."
        },
        "rank": {
            "type": "string",
            "description": "The agent's rank."
        },
        "contact": {
            "type": "string",
            "description": "The agent's contact details."
        },
        "address": {
            "type": "string",
            "description": "The agent's physical address."
        },
        "availability": {
          "type": "string",
          "description": "The agent's manual availability status.",
          "enum": ["Disponible", "En mission", "En congé"]
        }
      },
      "required": [
        "firstName",
        "lastName",
        "registrationNumber",
        "rank",
        "contact",
        "address",
        "availability"
      ]
    },
    "Mission": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Mission",
      "type": "object",
      "description": "Represents a mission.",
      "properties": {
        "name": {
            "type": "string",
            "description": "The name or title of the mission."
        },
        "location": {
          "type": "string",
          "description": "The location where the mission takes place."
        },
        "startDate": {
          "type": "string",
          "description": "The scheduled start time for the mission.",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "description": "The scheduled end time for the mission.",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "The current status of the mission.",
          "enum": ["Planification", "En cours", "Terminée", "Annulée"]
        },
        "assignedAgentIds": {
          "type": "array",
          "description": "A list of agent IDs assigned to the mission.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "location",
        "startDate",
        "endDate",
        "status",
        "assignedAgentIds"
      ]
    },
    "ActivityLog": {
        "title": "Activity Log",
        "type": "object",
        "description": "Represents a log entry for an activity performed in the application.",
        "properties": {
            "timestamp": {
                "type": "string",
                "format": "date-time",
                "description": "The time when the activity occurred."
            },
            "action": {
                "type": "string",
                "description": "A description of the action performed."
            },
            "entity": {
                "type": "string",
                "description": "The type of entity that was affected (e.g., 'Agent', 'Mission')."
            },
            "operation": {
                "type": "string",
                "description": "The type of operation (e.g., 'Création', 'Modification', 'Suppression')."
            }
        },
        "required": ["timestamp", "action", "entity", "operation"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
      "/agents/{agentId}": {
        "schema": {
          "$ref": "#/entities/Agent"
        },
        "description": "Stores information about individual agents."
      },
      "/missions/{missionId}": {
        "schema": {
          "$ref": "#/entities/Mission"
        },
        "description": "Stores details about individual missions."
      },
      "/activity_logs/{logId}": {
          "schema": {
              "$ref": "#/entities/ActivityLog"
          },
          "description": "Stores a log of all activities performed in the application."
      }
  }
}
