/**
 * @description This ruleset enforces a basic security model.
 *   It allows read access to all documents but restricts write access.
 *   Write access (create, update, delete) is disallowed for all users.
 * @dataStructure
 *   /agents/{agentId} - Stores information about individual agents.
 *   /missions/{missionId} - Stores details about individual missions.
 *   /gatherings/{gatheringId} - Stores details about individual gatherings.
 * @keySecurityDecisions
 *   - Read access is public for all collections.
 *   - Write access is denied for all users.
 *   - No data validation is performed in this prototype.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants read access to agent documents, but denies write access.
     * @path /agents/{agentId}
     * @allow (get, list): Any user can read agent information.
     * @deny (create, update, delete): No one can create, update, or delete agent information.
     * @principle Allows public reads, restricts all writes.
     */
    match /agents/{agentId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Grants read access to mission documents, but denies write access.
     * @path /missions/{missionId}
     * @allow (get, list): Any user can read mission information.
     * @deny (create, update, delete): No one can create, update, or delete mission information.
     * @principle Allows public reads, restricts all writes.
     */
    match /missions/{missionId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Grants read access to gathering documents, but denies write access.
     * @path /gatherings/{gatheringId}
     * @allow (get, list): Any user can read gathering information.
     * @deny (create, update, delete): No one can create, update, or delete gathering information.
     * @principle Allows public reads, restricts all writes.
     */
    match /gatherings/{gatheringId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }
  }
}