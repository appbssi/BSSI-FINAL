/**
 * @description This ruleset enforces a strict security model where only authenticated users can access data.
 * All data is organized in top-level collections: 'agents', 'missions', and 'activity_logs'.
 *
 * @keySecurityDecision All write operations require authentication. Listing of `activity_logs` is denied to all users.
 * @keySecurityDecision The rules do not enforce data validation beyond requiring user authentication.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows authenticated users to read agent data and create, update, or delete agent documents.
     * @path /agents/{agentId}
     * @allow (get) Signed-in user can retrieve agent data.
     * @allow (create) Signed-in user can create a new agent document.
     * @allow (update) Signed-in user can update an existing agent document.
     * @allow (delete) Signed-in user can delete an existing agent document.
     * @deny (create) Request without authentication.
     * @deny (update) Request without authentication.
     * @deny (delete) Request without authentication.
     * @principle Requires authentication for all operations.
     */
    match /agents/{agentId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Allows authenticated users to read mission data and create, update, or delete mission documents.
     * @path /missions/{missionId}
     * @allow (get) Signed-in user can retrieve mission data.
     * @allow (create) Signed-in user can create a new mission document.
     * @allow (update) Signed-in user can update an existing mission document.
     * @allow (delete) Signed-in user can delete an existing mission document.
     * @deny (create) Request without authentication.
     * @deny (update) Request without authentication.
     * @deny (delete) Request without authentication.
     * @principle Requires authentication for all operations.
     */
    match /missions/{missionId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

     /**
      * @description Denies listing of activity logs to all users. Only authenticated users can create, update, and delete activity log entries.
      * @path /activity_logs/{logId}
      * @deny (list) Any user attempting to list activity logs.
      * @allow (create) Signed-in user can create a new activity log entry.
      * @allow (update) Signed-in user can update an existing activity log entry.
      * @allow (delete) Signed-in user can delete an existing activity log entry.
      * @deny (create) Request without authentication.
      * @deny (update) Request without authentication.
      * @deny (delete) Request without authentication.
      * @principle Denies listing of activity logs. Requires authentication for all write operations.
      */
    match /activity_logs/{logId} {
      allow get: if isSignedIn();
      allow list: if false;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    function isSignedIn() {
      return request.auth != null;
    }
  }
}